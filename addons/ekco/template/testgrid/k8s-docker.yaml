- name: Minimal Latest, Rook
  installerSpec:
    kubernetes:
      version: "latest"
    weave:
      version: "latest"
    rook:
      version: "latest"
    docker:
      version: "latest"
    ekco:
      version: "__testver__"
      s3Override: "__testdist__"
- name: Kubernetes 1.22, Internal LB, Rook
  installerSpec:
    kubernetes:
      version: "1.22.x"
    weave:
      version: "latest"
    rook:
      version: "1.5.x"
    containerd:
      version: "latest"
    ekco:
      version: "__testver__"
      s3Override: "__testdist__"
      minReadyMasterNodeCount: 1
      autoUpgradeSchedule: Sat 17:30
      enableInternalLoadBalancer: true
- name: Kubernetes 1.21, Longhorn, Internal LB
  installerSpec:
    kubernetes:
      version: "1.21.x"
    weave:
      version: "latest"
    longhorn:
      version: "1.2.x"
    containerd:
      version: "latest"
    ekco:
      version: "__testver__"
      s3Override: "__testdist__"
      enableInternalLoadBalancer: true
- name: podImageOverrides
  installerSpec:
    kubernetes:
      version: "1.23.x"
    containerd:
      version: "latest"
    weave:
      version: "latest"
    longhorn:
      version: "latest"
    minio:
      version: "2020-01-25T02-50-51Z"
    kotsadm:
      version: 1.59.0
    ekco:
      version: "latest"
      podImageOverrides:
        - kotsadm/kotsadm:v1.59.0=docker.io/kotsadm/kotsadm:v1.59.3
        - kotsadm/kotsadm-migrations:v1.59.0=docker.io/kotsadm/kotsadm-migrations:v1.59.3
        - kotsadm/kurl-proxy:v1.59.0=docker.io/kotsadm/kurl-proxy:v1.59.3
  postInstallScript: |
    sleep 120

    pod_image="$(kubectl get po -l app=kotsadm -o jsonpath='{.items[].spec.containers[].image}')"

    if ! echo "$pod_image" | grep 'v1\.59\.3' ; then
      echo "Pod image override failed: $pod_image"
      exit 1
    fi

    echo "Pod image override success: $pod_image"