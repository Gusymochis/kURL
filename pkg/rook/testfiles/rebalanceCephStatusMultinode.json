{
  "fsid": "3f704069-4b22-4e5c-b6a7-b949981695a7",
  "health": {
    "checks": {
      "PG_DEGRADED": {
        "severity": "HEALTH_WARN",
        "summary": {
          "message": "Degraded data redundancy: 28841/67933 objects degraded (42.455%), 100 pgs degraded, 65 pgs undersized"
        }
      }
    },
    "status": "HEALTH_WARN"
  },
  "election_epoch": 196,
  "quorum": [
    0,
    1,
    2
  ],
  "quorum_names": [
    "a",
    "b",
    "c"
  ],
  "quorum_age": 645,
  "monmap": {
    "epoch": 3,
    "fsid": "3f704069-4b22-4e5c-b6a7-b949981695a7",
    "modified": "2022-08-10 15:51:23.401031",
    "created": "2022-08-10 15:23:44.112835",
    "min_mon_release": 14,
    "min_mon_release_name": "nautilus",
    "features": {
      "persistent": [
        "kraken",
        "luminous",
        "mimic",
        "osdmap-prune",
        "nautilus"
      ],
      "optional": []
    },
    "mons": [
      {
        "rank": 0,
        "name": "a",
        "public_addrs": {
          "addrvec": [
            {
              "type": "v2",
              "addr": "10.96.1.131:3300",
              "nonce": 0
            },
            {
              "type": "v1",
              "addr": "10.96.1.131:6789",
              "nonce": 0
            }
          ]
        },
        "addr": "10.96.1.131:6789/0",
        "public_addr": "10.96.1.131:6789/0"
      },
      {
        "rank": 1,
        "name": "b",
        "public_addrs": {
          "addrvec": [
            {
              "type": "v2",
              "addr": "10.96.2.149:3300",
              "nonce": 0
            },
            {
              "type": "v1",
              "addr": "10.96.2.149:6789",
              "nonce": 0
            }
          ]
        },
        "addr": "10.96.2.149:6789/0",
        "public_addr": "10.96.2.149:6789/0"
      },
      {
        "rank": 2,
        "name": "c",
        "public_addrs": {
          "addrvec": [
            {
              "type": "v2",
              "addr": "10.96.1.93:3300",
              "nonce": 0
            },
            {
              "type": "v1",
              "addr": "10.96.1.93:6789",
              "nonce": 0
            }
          ]
        },
        "addr": "10.96.1.93:6789/0",
        "public_addr": "10.96.1.93:6789/0"
      }
    ]
  },
  "osdmap": {
    "osdmap": {
      "epoch": 404,
      "num_osds": 6,
      "num_up_osds": 6,
      "num_in_osds": 5,
      "full": false,
      "nearfull": false,
      "num_remapped_pgs": 66
    }
  },
  "pgmap": {
    "pgs_by_state": [
      {
        "state_name": "active+clean",
        "count": 593
      },
      {
        "state_name": "active+recovery_wait+undersized+degraded+remapped",
        "count": 65
      },
      {
        "state_name": "active+recovery_wait+degraded",
        "count": 34
      },
      {
        "state_name": "active+recovery_wait",
        "count": 6
      },
      {
        "state_name": "active+recovery_wait+undersized+remapped",
        "count": 1
      },
      {
        "state_name": "active+recovering+degraded",
        "count": 1
      }
    ],
    "num_pgs": 700,
    "num_pools": 7,
    "num_objects": 22781,
    "data_bytes": 93788717675,
    "bytes_used": 363817840640,
    "bytes_avail": 578873233408,
    "bytes_total": 942691074048,
    "degraded_objects": 28841,
    "degraded_total": 67933,
    "degraded_ratio": 0.42455066020932392,
    "misplaced_objects": 1414,
    "misplaced_total": 67933,
    "misplaced_ratio": 0.020814626175790853,
    "recovering_objects_per_sec": 4,
    "recovering_bytes_per_sec": 18863356,
    "recovering_keys_per_sec": 0,
    "num_objects_recovered": 55,
    "num_bytes_recovered": 226557952,
    "num_keys_recovered": 0,
    "read_bytes_sec": 7452734,
    "write_bytes_sec": 45102971,
    "read_op_per_sec": 31,
    "write_op_per_sec": 20
  },
  "fsmap": {
    "epoch": 1,
    "by_rank": [],
    "up:standby": 0
  },
  "mgrmap": {
    "epoch": 233,
    "active_gid": 474116,
    "active_name": "a",
    "active_addrs": {
      "addrvec": [
        {
          "type": "v2",
          "addr": "10.32.4.4:6800",
          "nonce": 1
        },
        {
          "type": "v1",
          "addr": "10.32.4.4:6801",
          "nonce": 1
        }
      ]
    },
    "active_addr": "10.32.4.4:6801/1",
    "active_change": "2022-08-10 17:15:11.100830",
    "available": true,
    "standbys": [],
    "modules": [
      "dashboard",
      "iostat",
      "prometheus",
      "restful",
      "rook"
    ],
    "available_modules": [
      {
        "name": "ansible",
        "can_run": true,
        "error_string": "",
        "module_options": {
          "password": {
            "name": "password",
            "type": "str",
            "level": "advanced",
            "flags": 0,
            "default_value": "",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "",
            "long_desc": "",
            "tags": [],
            "see_also": []
          },
          "server_url": {
            "name": "server_url",
            "type": "str",
            "level": "advanced",
            "flags": 0,
            "default_value": "",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "",
            "long_desc": "",
            "tags": [],
            "see_also": []
          },
          "username": {
            "name": "username",
            "type": "str",
            "level": "advanced",
            "flags": 0,
            "default_value": "",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "",
            "long_desc": "",
            "tags": [],
            "see_also": []
          },
          "verify_server": {
            "name": "verify_server",
            "type": "str",
            "level": "advanced",
            "flags": 0,
            "default_value": "",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "",
            "long_desc": "",
            "tags": [],
            "see_also": []
          }
        }
      },
      {
        "name": "balancer",
        "can_run": true,
        "error_string": "",
        "module_options": {
          "active": {
            "name": "active",
            "type": "bool",
            "level": "advanced",
            "flags": 1,
            "default_value": "False",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "automatically balance PGs across cluster",
            "long_desc": "",
            "tags": [],
            "see_also": []
          },
          "begin_time": {
            "name": "begin_time",
            "type": "str",
            "level": "advanced",
            "flags": 1,
            "default_value": "0000",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "beginning time of day to automatically balance",
            "long_desc": "This is a time of day in the format HHMM.",
            "tags": [],
            "see_also": []
          },
          "begin_weekday": {
            "name": "begin_weekday",
            "type": "uint",
            "level": "advanced",
            "flags": 1,
            "default_value": "0",
            "min": "0",
            "max": "7",
            "enum_allowed": [],
            "desc": "Restrict automatic balancing to this day of the week or later",
            "long_desc": "0 or 7 = Sunday, 1 = Monday, etc.",
            "tags": [],
            "see_also": []
          },
          "crush_compat_max_iterations": {
            "name": "crush_compat_max_iterations",
            "type": "uint",
            "level": "advanced",
            "flags": 1,
            "default_value": "25",
            "min": "1",
            "max": "250",
            "enum_allowed": [],
            "desc": "maximum number of iterations to attempt optimization",
            "long_desc": "",
            "tags": [],
            "see_also": []
          },
          "crush_compat_metrics": {
            "name": "crush_compat_metrics",
            "type": "str",
            "level": "advanced",
            "flags": 1,
            "default_value": "pgs,objects,bytes",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "metrics with which to calculate OSD utilization",
            "long_desc": "Value is a list of one or more of \"pgs\", \"objects\", or \"bytes\", and indicates which metrics to use to balance utilization.",
            "tags": [],
            "see_also": []
          },
          "crush_compat_step": {
            "name": "crush_compat_step",
            "type": "float",
            "level": "advanced",
            "flags": 1,
            "default_value": "0.5",
            "min": "0.001",
            "max": "0.999",
            "enum_allowed": [],
            "desc": "aggressiveness of optimization",
            "long_desc": ".99 is very aggressive, .01 is less aggressive",
            "tags": [],
            "see_also": []
          },
          "end_time": {
            "name": "end_time",
            "type": "str",
            "level": "advanced",
            "flags": 1,
            "default_value": "2400",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "ending time of day to automatically balance",
            "long_desc": "This is a time of day in the format HHMM.",
            "tags": [],
            "see_also": []
          },
          "end_weekday": {
            "name": "end_weekday",
            "type": "uint",
            "level": "advanced",
            "flags": 1,
            "default_value": "7",
            "min": "0",
            "max": "7",
            "enum_allowed": [],
            "desc": "Restrict automatic balancing to days of the week earlier than this",
            "long_desc": "0 or 7 = Sunday, 1 = Monday, etc.",
            "tags": [],
            "see_also": []
          },
          "min_score": {
            "name": "min_score",
            "type": "float",
            "level": "advanced",
            "flags": 1,
            "default_value": "0",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "minimum score, below which no optimization is attempted",
            "long_desc": "",
            "tags": [],
            "see_also": []
          },
          "mode": {
            "name": "mode",
            "type": "str",
            "level": "advanced",
            "flags": 1,
            "default_value": "none",
            "min": "",
            "max": "",
            "enum_allowed": [
              "crush-compat",
              "none",
              "upmap"
            ],
            "desc": "Balancer mode",
            "long_desc": "",
            "tags": [],
            "see_also": []
          },
          "pool_ids": {
            "name": "pool_ids",
            "type": "str",
            "level": "advanced",
            "flags": 1,
            "default_value": "",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "pools which the automatic balancing will be limited to",
            "long_desc": "",
            "tags": [],
            "see_also": []
          },
          "sleep_interval": {
            "name": "sleep_interval",
            "type": "secs",
            "level": "advanced",
            "flags": 1,
            "default_value": "60",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "how frequently to wake up and attempt optimization",
            "long_desc": "",
            "tags": [],
            "see_also": []
          },
          "upmap_max_deviation": {
            "name": "upmap_max_deviation",
            "type": "float",
            "level": "advanced",
            "flags": 1,
            "default_value": "0.01",
            "min": "0",
            "max": "1",
            "enum_allowed": [],
            "desc": "deviation below which no optimization is attempted",
            "long_desc": "If the ratio between the fullest and least-full OSD is below this value then we stop trying to optimize placement.",
            "tags": [],
            "see_also": []
          },
          "upmap_max_iterations": {
            "name": "upmap_max_iterations",
            "type": "uint",
            "level": "advanced",
            "flags": 1,
            "default_value": "10",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "maximum upmap optimization iterations",
            "long_desc": "",
            "tags": [],
            "see_also": []
          }
        }
      },
      {
        "name": "crash",
        "can_run": true,
        "error_string": "",
        "module_options": {}
      },
      {
        "name": "dashboard",
        "can_run": true,
        "error_string": "",
        "module_options": {
          "ALERTMANAGER_API_HOST": {
            "name": "ALERTMANAGER_API_HOST",
            "type": "str",
            "level": "advanced",
            "flags": 0,
            "default_value": "",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "",
            "long_desc": "",
            "tags": [],
            "see_also": []
          },
          "AUDIT_API_ENABLED": {
            "name": "AUDIT_API_ENABLED",
            "type": "str",
            "level": "advanced",
            "flags": 0,
            "default_value": "False",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "",
            "long_desc": "",
            "tags": [],
            "see_also": []
          },
          "AUDIT_API_LOG_PAYLOAD": {
            "name": "AUDIT_API_LOG_PAYLOAD",
            "type": "str",
            "level": "advanced",
            "flags": 0,
            "default_value": "True",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "",
            "long_desc": "",
            "tags": [],
            "see_also": []
          },
          "ENABLE_BROWSABLE_API": {
            "name": "ENABLE_BROWSABLE_API",
            "type": "str",
            "level": "advanced",
            "flags": 0,
            "default_value": "True",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "",
            "long_desc": "",
            "tags": [],
            "see_also": []
          },
          "FEATURE_TOGGLE_cephfs": {
            "name": "FEATURE_TOGGLE_cephfs",
            "type": "bool",
            "level": "advanced",
            "flags": 0,
            "default_value": "True",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "",
            "long_desc": "",
            "tags": [],
            "see_also": []
          },
          "FEATURE_TOGGLE_iscsi": {
            "name": "FEATURE_TOGGLE_iscsi",
            "type": "bool",
            "level": "advanced",
            "flags": 0,
            "default_value": "True",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "",
            "long_desc": "",
            "tags": [],
            "see_also": []
          },
          "FEATURE_TOGGLE_mirroring": {
            "name": "FEATURE_TOGGLE_mirroring",
            "type": "bool",
            "level": "advanced",
            "flags": 0,
            "default_value": "True",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "",
            "long_desc": "",
            "tags": [],
            "see_also": []
          },
          "FEATURE_TOGGLE_rbd": {
            "name": "FEATURE_TOGGLE_rbd",
            "type": "bool",
            "level": "advanced",
            "flags": 0,
            "default_value": "True",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "",
            "long_desc": "",
            "tags": [],
            "see_also": []
          },
          "FEATURE_TOGGLE_rgw": {
            "name": "FEATURE_TOGGLE_rgw",
            "type": "bool",
            "level": "advanced",
            "flags": 0,
            "default_value": "True",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "",
            "long_desc": "",
            "tags": [],
            "see_also": []
          },
          "GANESHA_CLUSTERS_RADOS_POOL_NAMESPACE": {
            "name": "GANESHA_CLUSTERS_RADOS_POOL_NAMESPACE",
            "type": "str",
            "level": "advanced",
            "flags": 0,
            "default_value": "",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "",
            "long_desc": "",
            "tags": [],
            "see_also": []
          },
          "GRAFANA_API_PASSWORD": {
            "name": "GRAFANA_API_PASSWORD",
            "type": "str",
            "level": "advanced",
            "flags": 0,
            "default_value": "admin",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "",
            "long_desc": "",
            "tags": [],
            "see_also": []
          },
          "GRAFANA_API_URL": {
            "name": "GRAFANA_API_URL",
            "type": "str",
            "level": "advanced",
            "flags": 0,
            "default_value": "",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "",
            "long_desc": "",
            "tags": [],
            "see_also": []
          },
          "GRAFANA_API_USERNAME": {
            "name": "GRAFANA_API_USERNAME",
            "type": "str",
            "level": "advanced",
            "flags": 0,
            "default_value": "admin",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "",
            "long_desc": "",
            "tags": [],
            "see_also": []
          },
          "ISCSI_API_SSL_VERIFICATION": {
            "name": "ISCSI_API_SSL_VERIFICATION",
            "type": "str",
            "level": "advanced",
            "flags": 0,
            "default_value": "True",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "",
            "long_desc": "",
            "tags": [],
            "see_also": []
          },
          "PROMETHEUS_API_HOST": {
            "name": "PROMETHEUS_API_HOST",
            "type": "str",
            "level": "advanced",
            "flags": 0,
            "default_value": "",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "",
            "long_desc": "",
            "tags": [],
            "see_also": []
          },
          "REST_REQUESTS_TIMEOUT": {
            "name": "REST_REQUESTS_TIMEOUT",
            "type": "str",
            "level": "advanced",
            "flags": 0,
            "default_value": "45",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "",
            "long_desc": "",
            "tags": [],
            "see_also": []
          },
          "RGW_API_ACCESS_KEY": {
            "name": "RGW_API_ACCESS_KEY",
            "type": "str",
            "level": "advanced",
            "flags": 0,
            "default_value": "",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "",
            "long_desc": "",
            "tags": [],
            "see_also": []
          },
          "RGW_API_ADMIN_RESOURCE": {
            "name": "RGW_API_ADMIN_RESOURCE",
            "type": "str",
            "level": "advanced",
            "flags": 0,
            "default_value": "admin",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "",
            "long_desc": "",
            "tags": [],
            "see_also": []
          },
          "RGW_API_HOST": {
            "name": "RGW_API_HOST",
            "type": "str",
            "level": "advanced",
            "flags": 0,
            "default_value": "",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "",
            "long_desc": "",
            "tags": [],
            "see_also": []
          },
          "RGW_API_PORT": {
            "name": "RGW_API_PORT",
            "type": "str",
            "level": "advanced",
            "flags": 0,
            "default_value": "80",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "",
            "long_desc": "",
            "tags": [],
            "see_also": []
          },
          "RGW_API_SCHEME": {
            "name": "RGW_API_SCHEME",
            "type": "str",
            "level": "advanced",
            "flags": 0,
            "default_value": "http",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "",
            "long_desc": "",
            "tags": [],
            "see_also": []
          },
          "RGW_API_SECRET_KEY": {
            "name": "RGW_API_SECRET_KEY",
            "type": "str",
            "level": "advanced",
            "flags": 0,
            "default_value": "",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "",
            "long_desc": "",
            "tags": [],
            "see_also": []
          },
          "RGW_API_SSL_VERIFY": {
            "name": "RGW_API_SSL_VERIFY",
            "type": "str",
            "level": "advanced",
            "flags": 0,
            "default_value": "True",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "",
            "long_desc": "",
            "tags": [],
            "see_also": []
          },
          "RGW_API_USER_ID": {
            "name": "RGW_API_USER_ID",
            "type": "str",
            "level": "advanced",
            "flags": 0,
            "default_value": "",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "",
            "long_desc": "",
            "tags": [],
            "see_also": []
          },
          "crt_file": {
            "name": "crt_file",
            "type": "str",
            "level": "advanced",
            "flags": 0,
            "default_value": "",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "",
            "long_desc": "",
            "tags": [],
            "see_also": []
          },
          "jwt_token_ttl": {
            "name": "jwt_token_ttl",
            "type": "int",
            "level": "advanced",
            "flags": 0,
            "default_value": "28800",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "",
            "long_desc": "",
            "tags": [],
            "see_also": []
          },
          "key_file": {
            "name": "key_file",
            "type": "str",
            "level": "advanced",
            "flags": 0,
            "default_value": "",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "",
            "long_desc": "",
            "tags": [],
            "see_also": []
          },
          "password": {
            "name": "password",
            "type": "str",
            "level": "advanced",
            "flags": 0,
            "default_value": "",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "",
            "long_desc": "",
            "tags": [],
            "see_also": []
          },
          "server_addr": {
            "name": "server_addr",
            "type": "str",
            "level": "advanced",
            "flags": 0,
            "default_value": "::",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "",
            "long_desc": "",
            "tags": [],
            "see_also": []
          },
          "server_port": {
            "name": "server_port",
            "type": "int",
            "level": "advanced",
            "flags": 0,
            "default_value": "8443",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "",
            "long_desc": "",
            "tags": [],
            "see_also": []
          },
          "ssl": {
            "name": "ssl",
            "type": "bool",
            "level": "advanced",
            "flags": 0,
            "default_value": "True",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "",
            "long_desc": "",
            "tags": [],
            "see_also": []
          },
          "url_prefix": {
            "name": "url_prefix",
            "type": "str",
            "level": "advanced",
            "flags": 0,
            "default_value": "",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "",
            "long_desc": "",
            "tags": [],
            "see_also": []
          },
          "username": {
            "name": "username",
            "type": "str",
            "level": "advanced",
            "flags": 0,
            "default_value": "",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "",
            "long_desc": "",
            "tags": [],
            "see_also": []
          }
        }
      },
      {
        "name": "deepsea",
        "can_run": true,
        "error_string": "",
        "module_options": {
          "salt_api_eauth": {
            "name": "salt_api_eauth",
            "type": "str",
            "level": "advanced",
            "flags": 0,
            "default_value": "sharedsecret",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "",
            "long_desc": "",
            "tags": [],
            "see_also": []
          },
          "salt_api_password": {
            "name": "salt_api_password",
            "type": "str",
            "level": "advanced",
            "flags": 0,
            "default_value": "None",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "",
            "long_desc": "",
            "tags": [],
            "see_also": []
          },
          "salt_api_url": {
            "name": "salt_api_url",
            "type": "str",
            "level": "advanced",
            "flags": 0,
            "default_value": "None",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "",
            "long_desc": "",
            "tags": [],
            "see_also": []
          },
          "salt_api_username": {
            "name": "salt_api_username",
            "type": "str",
            "level": "advanced",
            "flags": 0,
            "default_value": "None",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "",
            "long_desc": "",
            "tags": [],
            "see_also": []
          }
        }
      },
      {
        "name": "devicehealth",
        "can_run": true,
        "error_string": "",
        "module_options": {
          "enable_monitoring": {
            "name": "enable_monitoring",
            "type": "bool",
            "level": "advanced",
            "flags": 1,
            "default_value": "False",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "monitor device health metrics",
            "long_desc": "",
            "tags": [],
            "see_also": []
          },
          "mark_out_threshold": {
            "name": "mark_out_threshold",
            "type": "secs",
            "level": "advanced",
            "flags": 1,
            "default_value": "2419200",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "automatically mark OSD if it may fail before this long",
            "long_desc": "",
            "tags": [],
            "see_also": []
          },
          "pool_name": {
            "name": "pool_name",
            "type": "str",
            "level": "advanced",
            "flags": 1,
            "default_value": "device_health_metrics",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "name of pool in which to store device health metrics",
            "long_desc": "",
            "tags": [],
            "see_also": []
          },
          "retention_period": {
            "name": "retention_period",
            "type": "secs",
            "level": "advanced",
            "flags": 1,
            "default_value": "15552000",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "how long to retain device health metrics",
            "long_desc": "",
            "tags": [],
            "see_also": []
          },
          "scrape_frequency": {
            "name": "scrape_frequency",
            "type": "secs",
            "level": "advanced",
            "flags": 1,
            "default_value": "86400",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "how frequently to scrape device health metrics",
            "long_desc": "",
            "tags": [],
            "see_also": []
          },
          "self_heal": {
            "name": "self_heal",
            "type": "bool",
            "level": "advanced",
            "flags": 1,
            "default_value": "True",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "preemptively heal cluster around devices that may fail",
            "long_desc": "",
            "tags": [],
            "see_also": []
          },
          "sleep_interval": {
            "name": "sleep_interval",
            "type": "secs",
            "level": "advanced",
            "flags": 1,
            "default_value": "600",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "how frequently to wake up and check device health",
            "long_desc": "",
            "tags": [],
            "see_also": []
          },
          "warn_threshold": {
            "name": "warn_threshold",
            "type": "secs",
            "level": "advanced",
            "flags": 1,
            "default_value": "7257600",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "raise health warning if OSD may fail before this long",
            "long_desc": "",
            "tags": [],
            "see_also": []
          }
        }
      },
      {
        "name": "diskprediction_local",
        "can_run": true,
        "error_string": "",
        "module_options": {
          "predict_interval": {
            "name": "predict_interval",
            "type": "str",
            "level": "advanced",
            "flags": 0,
            "default_value": "86400",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "",
            "long_desc": "",
            "tags": [],
            "see_also": []
          },
          "sleep_interval": {
            "name": "sleep_interval",
            "type": "str",
            "level": "advanced",
            "flags": 0,
            "default_value": "600",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "",
            "long_desc": "",
            "tags": [],
            "see_also": []
          }
        }
      },
      {
        "name": "influx",
        "can_run": false,
        "error_string": "influxdb python module not found",
        "module_options": {
          "batch_size": {
            "name": "batch_size",
            "type": "str",
            "level": "advanced",
            "flags": 0,
            "default_value": "5000",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "",
            "long_desc": "",
            "tags": [],
            "see_also": []
          },
          "database": {
            "name": "database",
            "type": "str",
            "level": "advanced",
            "flags": 0,
            "default_value": "ceph",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "",
            "long_desc": "",
            "tags": [],
            "see_also": []
          },
          "hostname": {
            "name": "hostname",
            "type": "str",
            "level": "advanced",
            "flags": 0,
            "default_value": "None",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "",
            "long_desc": "",
            "tags": [],
            "see_also": []
          },
          "interval": {
            "name": "interval",
            "type": "str",
            "level": "advanced",
            "flags": 0,
            "default_value": "30",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "",
            "long_desc": "",
            "tags": [],
            "see_also": []
          },
          "password": {
            "name": "password",
            "type": "str",
            "level": "advanced",
            "flags": 0,
            "default_value": "None",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "",
            "long_desc": "",
            "tags": [],
            "see_also": []
          },
          "port": {
            "name": "port",
            "type": "str",
            "level": "advanced",
            "flags": 0,
            "default_value": "8086",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "",
            "long_desc": "",
            "tags": [],
            "see_also": []
          },
          "ssl": {
            "name": "ssl",
            "type": "str",
            "level": "advanced",
            "flags": 0,
            "default_value": "false",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "",
            "long_desc": "",
            "tags": [],
            "see_also": []
          },
          "threads": {
            "name": "threads",
            "type": "str",
            "level": "advanced",
            "flags": 0,
            "default_value": "5",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "",
            "long_desc": "",
            "tags": [],
            "see_also": []
          },
          "username": {
            "name": "username",
            "type": "str",
            "level": "advanced",
            "flags": 0,
            "default_value": "None",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "",
            "long_desc": "",
            "tags": [],
            "see_also": []
          },
          "verify_ssl": {
            "name": "verify_ssl",
            "type": "str",
            "level": "advanced",
            "flags": 0,
            "default_value": "true",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "",
            "long_desc": "",
            "tags": [],
            "see_also": []
          }
        }
      },
      {
        "name": "insights",
        "can_run": true,
        "error_string": "",
        "module_options": {}
      },
      {
        "name": "iostat",
        "can_run": true,
        "error_string": "",
        "module_options": {}
      },
      {
        "name": "localpool",
        "can_run": true,
        "error_string": "",
        "module_options": {
          "failure_domain": {
            "name": "failure_domain",
            "type": "str",
            "level": "advanced",
            "flags": 1,
            "default_value": "host",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "failure domain for any created local pool",
            "long_desc": "",
            "tags": [],
            "see_also": []
          },
          "min_size": {
            "name": "min_size",
            "type": "int",
            "level": "advanced",
            "flags": 1,
            "default_value": "",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "default min_size for any created local pool",
            "long_desc": "",
            "tags": [],
            "see_also": []
          },
          "num_rep": {
            "name": "num_rep",
            "type": "int",
            "level": "advanced",
            "flags": 1,
            "default_value": "3",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "default replica count for any created local pool",
            "long_desc": "",
            "tags": [],
            "see_also": []
          },
          "pg_num": {
            "name": "pg_num",
            "type": "int",
            "level": "advanced",
            "flags": 1,
            "default_value": "128",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "default pg_num for any created local pool",
            "long_desc": "",
            "tags": [],
            "see_also": []
          },
          "prefix": {
            "name": "prefix",
            "type": "str",
            "level": "advanced",
            "flags": 1,
            "default_value": "",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "name prefix for any created local pool",
            "long_desc": "",
            "tags": [],
            "see_also": []
          },
          "subtree": {
            "name": "subtree",
            "type": "str",
            "level": "advanced",
            "flags": 1,
            "default_value": "rack",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "CRUSH level for which to create a local pool",
            "long_desc": "",
            "tags": [],
            "see_also": []
          }
        }
      },
      {
        "name": "orchestrator_cli",
        "can_run": true,
        "error_string": "",
        "module_options": {
          "orchestrator": {
            "name": "orchestrator",
            "type": "str",
            "level": "advanced",
            "flags": 0,
            "default_value": "",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "",
            "long_desc": "",
            "tags": [],
            "see_also": []
          }
        }
      },
      {
        "name": "pg_autoscaler",
        "can_run": true,
        "error_string": "",
        "module_options": {
          "sleep_interval": {
            "name": "sleep_interval",
            "type": "str",
            "level": "advanced",
            "flags": 0,
            "default_value": "60",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "",
            "long_desc": "",
            "tags": [],
            "see_also": []
          }
        }
      },
      {
        "name": "progress",
        "can_run": true,
        "error_string": "",
        "module_options": {
          "max_completed_events": {
            "name": "max_completed_events",
            "type": "int",
            "level": "advanced",
            "flags": 1,
            "default_value": "50",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "number of past completed events to remember",
            "long_desc": "",
            "tags": [],
            "see_also": []
          },
          "persist_interval": {
            "name": "persist_interval",
            "type": "secs",
            "level": "advanced",
            "flags": 1,
            "default_value": "5",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "how frequently to persist completed events",
            "long_desc": "",
            "tags": [],
            "see_also": []
          }
        }
      },
      {
        "name": "prometheus",
        "can_run": true,
        "error_string": "",
        "module_options": {
          "rbd_stats_pools": {
            "name": "rbd_stats_pools",
            "type": "str",
            "level": "advanced",
            "flags": 0,
            "default_value": "",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "",
            "long_desc": "",
            "tags": [],
            "see_also": []
          },
          "rbd_stats_pools_refresh_interval": {
            "name": "rbd_stats_pools_refresh_interval",
            "type": "str",
            "level": "advanced",
            "flags": 0,
            "default_value": "",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "",
            "long_desc": "",
            "tags": [],
            "see_also": []
          },
          "scrape_interval": {
            "name": "scrape_interval",
            "type": "str",
            "level": "advanced",
            "flags": 0,
            "default_value": "",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "",
            "long_desc": "",
            "tags": [],
            "see_also": []
          },
          "server_addr": {
            "name": "server_addr",
            "type": "str",
            "level": "advanced",
            "flags": 0,
            "default_value": "",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "",
            "long_desc": "",
            "tags": [],
            "see_also": []
          },
          "server_port": {
            "name": "server_port",
            "type": "str",
            "level": "advanced",
            "flags": 0,
            "default_value": "",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "",
            "long_desc": "",
            "tags": [],
            "see_also": []
          }
        }
      },
      {
        "name": "rbd_support",
        "can_run": true,
        "error_string": "",
        "module_options": {}
      },
      {
        "name": "restful",
        "can_run": true,
        "error_string": "",
        "module_options": {
          "key_file": {
            "name": "key_file",
            "type": "str",
            "level": "advanced",
            "flags": 0,
            "default_value": "",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "",
            "long_desc": "",
            "tags": [],
            "see_also": []
          },
          "server_addr": {
            "name": "server_addr",
            "type": "str",
            "level": "advanced",
            "flags": 0,
            "default_value": "",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "",
            "long_desc": "",
            "tags": [],
            "see_also": []
          },
          "server_port": {
            "name": "server_port",
            "type": "str",
            "level": "advanced",
            "flags": 0,
            "default_value": "",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "",
            "long_desc": "",
            "tags": [],
            "see_also": []
          }
        }
      },
      {
        "name": "rook",
        "can_run": true,
        "error_string": "",
        "module_options": {}
      },
      {
        "name": "selftest",
        "can_run": true,
        "error_string": "",
        "module_options": {
          "roption1": {
            "name": "roption1",
            "type": "str",
            "level": "advanced",
            "flags": 0,
            "default_value": "",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "",
            "long_desc": "",
            "tags": [],
            "see_also": []
          },
          "roption2": {
            "name": "roption2",
            "type": "str",
            "level": "advanced",
            "flags": 0,
            "default_value": "xyz",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "",
            "long_desc": "",
            "tags": [],
            "see_also": []
          },
          "rwoption1": {
            "name": "rwoption1",
            "type": "str",
            "level": "advanced",
            "flags": 0,
            "default_value": "",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "",
            "long_desc": "",
            "tags": [],
            "see_also": []
          },
          "rwoption2": {
            "name": "rwoption2",
            "type": "int",
            "level": "advanced",
            "flags": 0,
            "default_value": "",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "",
            "long_desc": "",
            "tags": [],
            "see_also": []
          },
          "rwoption3": {
            "name": "rwoption3",
            "type": "float",
            "level": "advanced",
            "flags": 0,
            "default_value": "",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "",
            "long_desc": "",
            "tags": [],
            "see_also": []
          },
          "rwoption4": {
            "name": "rwoption4",
            "type": "str",
            "level": "advanced",
            "flags": 0,
            "default_value": "",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "",
            "long_desc": "",
            "tags": [],
            "see_also": []
          },
          "rwoption5": {
            "name": "rwoption5",
            "type": "bool",
            "level": "advanced",
            "flags": 0,
            "default_value": "",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "",
            "long_desc": "",
            "tags": [],
            "see_also": []
          },
          "rwoption6": {
            "name": "rwoption6",
            "type": "bool",
            "level": "advanced",
            "flags": 0,
            "default_value": "True",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "",
            "long_desc": "",
            "tags": [],
            "see_also": []
          },
          "testkey": {
            "name": "testkey",
            "type": "str",
            "level": "advanced",
            "flags": 0,
            "default_value": "",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "",
            "long_desc": "",
            "tags": [],
            "see_also": []
          },
          "testlkey": {
            "name": "testlkey",
            "type": "str",
            "level": "advanced",
            "flags": 0,
            "default_value": "",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "",
            "long_desc": "",
            "tags": [],
            "see_also": []
          },
          "testnewline": {
            "name": "testnewline",
            "type": "str",
            "level": "advanced",
            "flags": 0,
            "default_value": "",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "",
            "long_desc": "",
            "tags": [],
            "see_also": []
          }
        }
      },
      {
        "name": "status",
        "can_run": true,
        "error_string": "",
        "module_options": {}
      },
      {
        "name": "telegraf",
        "can_run": true,
        "error_string": "",
        "module_options": {
          "address": {
            "name": "address",
            "type": "str",
            "level": "advanced",
            "flags": 0,
            "default_value": "unixgram:///tmp/telegraf.sock",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "",
            "long_desc": "",
            "tags": [],
            "see_also": []
          },
          "interval": {
            "name": "interval",
            "type": "secs",
            "level": "advanced",
            "flags": 0,
            "default_value": "15",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "",
            "long_desc": "",
            "tags": [],
            "see_also": []
          }
        }
      },
      {
        "name": "telemetry",
        "can_run": true,
        "error_string": "",
        "module_options": {
          "contact": {
            "name": "contact",
            "type": "str",
            "level": "advanced",
            "flags": 0,
            "default_value": "None",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "",
            "long_desc": "",
            "tags": [],
            "see_also": []
          },
          "description": {
            "name": "description",
            "type": "str",
            "level": "advanced",
            "flags": 0,
            "default_value": "None",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "",
            "long_desc": "",
            "tags": [],
            "see_also": []
          },
          "enabled": {
            "name": "enabled",
            "type": "bool",
            "level": "advanced",
            "flags": 0,
            "default_value": "False",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "",
            "long_desc": "",
            "tags": [],
            "see_also": []
          },
          "interval": {
            "name": "interval",
            "type": "int",
            "level": "advanced",
            "flags": 0,
            "default_value": "72",
            "min": "24",
            "max": "",
            "enum_allowed": [],
            "desc": "",
            "long_desc": "",
            "tags": [],
            "see_also": []
          },
          "leaderboard": {
            "name": "leaderboard",
            "type": "bool",
            "level": "advanced",
            "flags": 0,
            "default_value": "False",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "",
            "long_desc": "",
            "tags": [],
            "see_also": []
          },
          "organization": {
            "name": "organization",
            "type": "str",
            "level": "advanced",
            "flags": 0,
            "default_value": "None",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "",
            "long_desc": "",
            "tags": [],
            "see_also": []
          },
          "proxy": {
            "name": "proxy",
            "type": "str",
            "level": "advanced",
            "flags": 0,
            "default_value": "None",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "",
            "long_desc": "",
            "tags": [],
            "see_also": []
          },
          "url": {
            "name": "url",
            "type": "str",
            "level": "advanced",
            "flags": 0,
            "default_value": "https://telemetry.ceph.com/report",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "",
            "long_desc": "",
            "tags": [],
            "see_also": []
          }
        }
      },
      {
        "name": "test_orchestrator",
        "can_run": true,
        "error_string": "",
        "module_options": {}
      },
      {
        "name": "volumes",
        "can_run": true,
        "error_string": "",
        "module_options": {}
      },
      {
        "name": "zabbix",
        "can_run": true,
        "error_string": "",
        "module_options": {
          "identifier": {
            "name": "identifier",
            "type": "str",
            "level": "advanced",
            "flags": 0,
            "default_value": "",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "",
            "long_desc": "",
            "tags": [],
            "see_also": []
          },
          "interval": {
            "name": "interval",
            "type": "secs",
            "level": "advanced",
            "flags": 0,
            "default_value": "60",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "",
            "long_desc": "",
            "tags": [],
            "see_also": []
          },
          "zabbix_host": {
            "name": "zabbix_host",
            "type": "str",
            "level": "advanced",
            "flags": 0,
            "default_value": "None",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "",
            "long_desc": "",
            "tags": [],
            "see_also": []
          },
          "zabbix_port": {
            "name": "zabbix_port",
            "type": "int",
            "level": "advanced",
            "flags": 0,
            "default_value": "10051",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "",
            "long_desc": "",
            "tags": [],
            "see_also": []
          },
          "zabbix_sender": {
            "name": "zabbix_sender",
            "type": "str",
            "level": "advanced",
            "flags": 0,
            "default_value": "/usr/bin/zabbix_sender",
            "min": "",
            "max": "",
            "enum_allowed": [],
            "desc": "",
            "long_desc": "",
            "tags": [],
            "see_also": []
          }
        }
      }
    ],
    "services": {
      "dashboard": "https://rook-ceph-mgr-a-cc58d575b-5kkjs:8443/",
      "prometheus": "http://rook-ceph-mgr-a-cc58d575b-5kkjs:9283/"
    },
    "always_on_modules": {
      "nautilus": [
        "balancer",
        "crash",
        "devicehealth",
        "orchestrator_cli",
        "progress",
        "status",
        "volumes"
      ]
    }
  },
  "servicemap": {
    "epoch": 2,
    "modified": "2022-08-10 15:25:02.483080",
    "services": {
      "rgw": {
        "daemons": {
          "summary": "",
          "rook.ceph.store.a": {
            "start_epoch": 2,
            "start_stamp": "2022-08-10 15:25:00.738192",
            "gid": 4426,
            "addr": "10.32.0.8:0/2420085482",
            "metadata": {
              "arch": "x86_64",
              "ceph_release": "nautilus",
              "ceph_version": "ceph version 14.2.0 (3a54b2b6d167d4a2a19e003a705696d4fe619afc) nautilus (stable)",
              "ceph_version_short": "14.2.0",
              "container_hostname": "rook-ceph-rgw-rook-ceph-store-a-774fc8f844-mrbdt",
              "container_image": "kurlsh/ceph:v14.2.0-9065b09-20210625",
              "cpu": "Intel(R) Xeon(R) CPU @ 2.20GHz",
              "distro": "centos",
              "distro_description": "CentOS Linux 7 (Core)",
              "distro_version": "7",
              "frontend_config#0": "beast port=80",
              "frontend_type#0": "beast",
              "hostname": "laverya-rookmigrate-healthwait-main",
              "kernel_description": "#18~20.04.1-Ubuntu SMP Sun Jul 3 08:20:07 UTC 2022",
              "kernel_version": "5.15.0-1013-gcp",
              "mem_swap_kb": "0",
              "mem_total_kb": "16383968",
              "num_handles": "1",
              "os": "Linux",
              "pid": "1",
              "pod_name": "rook-ceph-rgw-rook-ceph-store-a-774fc8f844-mrbdt",
              "pod_namespace": "rook-ceph",
              "zone_id": "1cfb63ad-0440-450a-98ee-1f68cff076f3",
              "zone_name": "rook-ceph-store",
              "zonegroup_id": "d414a72d-7d7b-4c05-a884-28a4e9c9d89c",
              "zonegroup_name": "rook-ceph-store"
            }
          }
        }
      }
    }
  },
  "progress_events": {
    "6d484b2d-401e-476a-8dc6-53b6bcbbc258": {
      "message": "Rebalancing after osd.0 marked out",
      "progress": 0.64823943376541138
    }
  }
}
