- name: "k8s_125x containerd 1.5.x upgrade to latest"
  installerSpec:
    kubernetes:
      version: 1.25.x
    flannel:
      version: latest
    containerd:
      version: 1.5.x
  upgradeSpec:
    kubernetes:
      version: 1.25.x
    flannel:
      version: latest
    containerd:
      version: latest
- name: rook-upgrade-to-1.5-airgap
  flags: "yes"
  airgap: true
  installerSpec:
    kubernetes:
      version: 1.19.x
    containerd:
      version: "latest"
    flannel:
      version: latest
    rook:
      version: "1.0.4"
    ekco:
      version: "latest"
    prometheus:
      version: "latest"
    minio:
      version: "latest"
  upgradeSpec:
    kubernetes:
      version: 1.19.x
    containerd:
      version: "latest"
    flannel:
      version: latest
    rook:
      version: "1.5.12"
    ekco:
      version: "latest"
    prometheus:
      version: "latest"
    minio:
      version: "latest"
  preInstallScript: |
    # download the file that the airgap upgrade requires, and place it in the correct location
    curl -LO https://s3-staging.kurl.sh/staging/rookupgrade-10to14.tar.gz
    curl -LO https://s3-staging.kurl.sh/staging/rook-1.4.9.tar.gz
    curl -LO https://s3-staging.kurl.sh/staging/rook-1.5.12.tar.gz
    mkdir -p /var/lib/kurl/assets
    mv rookupgrade-10to14.tar.gz /var/lib/kurl/assets
    mv rook-1.4.9.tar.gz /var/lib/kurl/assets
    mv rook-1.5.12.tar.gz /var/lib/kurl/assets
  postInstallScript: |
    source /opt/kurl-testgrid/testhelpers.sh
    rook_ceph_object_store_info
    validate_read_write_object_store rwtest testfile.txt

    minio_object_store_info
    validate_read_write_object_store rwtest minio.txt
    echo "Checking kubectl with kube/config"
    echo "Kubeconfig was $KUBECONFIG"
    unset KUBECONFIG
    kubectl get namespaces
  postUpgradeScript: |
    source /opt/kurl-testgrid/testhelpers.sh
    rook_ceph_object_store_info
    validate_testfile rwtest testfile.txt
    validate_read_write_object_store postupgrade upgradefile.txt

    minio_object_store_info
    validate_testfile rwtest minio.txt
    validate_read_write_object_store postupgrade minioupgrade.txt

    operatorVersion=$(kubectl get deployment -n rook-ceph rook-ceph-operator -o jsonpath='{.spec.template.spec.containers[0].image}')
    echo $operatorVersion | grep 1.5.12

    k8sVersion=$(kubectl get nodes -o jsonpath='{.items[0].status.nodeInfo.kubeletVersion}')
    echo $k8sVersion | grep 1.19
    echo "Checking kubectl with kube/config"
    echo "Kubeconfig was $KUBECONFIG"
    unset KUBECONFIG
    kubectl get namespaces
- name: rook-upgrade-to-1.5
  flags: "yes"
  installerSpec:
    kubernetes:
      version: 1.19.x
    containerd:
      version: "latest"
    flannel:
      version: latest
    rook:
      version: "1.0.4"
    ekco:
      version: "latest"
    prometheus:
      version: "latest"
    minio:
      version: "latest"
  upgradeSpec:
    kubernetes:
      version: 1.20.x
    containerd:
      version: "latest"
    flannel:
      version: latest
    rook:
      version: "1.5.12"
    ekco:
      version: "latest"
    prometheus:
      version: "latest"
    minio:
      version: "latest"
  postInstallScript: |
    source /opt/kurl-testgrid/testhelpers.sh
    rook_ceph_object_store_info
    validate_read_write_object_store rwtest testfile.txt

    minio_object_store_info
    validate_read_write_object_store rwtest minio.txt
    echo "Checking kubectl with kube/config"
    echo "Kubeconfig was $KUBECONFIG"
    unset KUBECONFIG
    kubectl get namespaces
  postUpgradeScript: |
    source /opt/kurl-testgrid/testhelpers.sh
    rook_ceph_object_store_info
    validate_testfile rwtest testfile.txt
    validate_read_write_object_store postupgrade upgradefile.txt

    minio_object_store_info
    validate_testfile rwtest minio.txt
    validate_read_write_object_store postupgrade minioupgrade.txt

    operatorVersion=$(kubectl get deployment -n rook-ceph rook-ceph-operator -o jsonpath='{.spec.template.spec.containers[0].image}')
    echo $operatorVersion | grep 1.5.12

    k8sVersion=$(kubectl get nodes -o jsonpath='{.items[0].status.nodeInfo.kubeletVersion}')
    echo $k8sVersion | grep 1.20
    echo "Checking kubectl with kube/config"
    echo "Kubeconfig was $KUBECONFIG"
    unset KUBECONFIG
    kubectl get namespaces
- name: "Cust1 Upgrade - no HA"
  installerSpec:
    kubernetes:
      version: "1.19.x"
    docker:
      version: "19.03.10"
      daemonConfig: |
        {
          "exec-opts": ["native.cgroupdriver=systemd"],
          "log-opts": {
              "max-size": "100m",
              "max-file": "3"
              }
        }
    weave:
      version: "2.6.5"
    rook:
      version: "1.0.4"
    contour:
      version: "1.7.0"
      tlsMinimumProtocolVersion: "1.2"
    registry:
      version: "2.7.1"
    prometheus:
      version: "0.49.0-17.1.3"
    velero:
      version: "1.6.0"
    kotsadm:
      version: "1.57.0"
    goldpinger:
      version: "3.2.0-4.1.1"
    openebs:
      version: "1.6.0"
      namespace: "openebs"
      isLocalPVEnabled: true
      localPVStorageClassName: openebs
      isCstorEnabled: false
    ekco:
      version: "0.10.2"
      nodeUnreachableToleration: 5m
      minReadyMasterNodeCount: 2
      minReadyWorkerNodeCount: 0
      rookShouldUseAllNodes: false
      rookShouldDisableReconcileMDSPlacement: false
      rookShouldDisableReconcileCephCSIResources: false
      shouldDisableRebootServices: false
      shouldDisableClearNodes: false
      shouldEnablePurgeNodes: false
      shouldDisableRestartFailedEnvoyPods: false
      envoyPodsNotReadyDuration: "5m"
  upgradeSpec:
    kubernetes:
      version: "1.21.9"
      containerLogMaxFiles: 5
      containerLogMaxSize: 5Mi
    containerd:
      version: "1.4.6"
    weave:
      version: "2.6.5"
    longhorn:
      version: "1.1.2"
    minio:
      version: "2020-01-25T02-50-51Z"
    contour:
      version: "1.7.0"
    registry:
      version: "2.7.1"
    prometheus:
      version: "0.49.0-17.1.3"
    velero:
      version: "1.6.0"
    kotsadm:
      version: "1.57.0"
    goldpinger:
      version: "3.2.0-4.1.1"
    openebs:
      version: "1.12.0"
      namespace: openebs
      isLocalPVEnabled: true
      localPVStorageClassName: openebs
      isCstorEnabled: false
    ekco:
      version: "0.16.0"
      nodeUnreachableToleration: 5m
      minReadyMasterNodeCount: 2
      minReadyWorkerNodeCount: 0
      rookShouldUseAllNodes: false
      rookShouldDisableReconcileMDSPlacement: false
      rookShouldDisableReconcileCephCSIResources: false
      shouldDisableRebootServices: false
      shouldDisableClearNodes: false
      shouldEnablePurgeNodes: false
      shouldDisableRestartFailedEnvoyPods: false
      envoyPodsNotReadyDuration: "5m"
  unsupportedOSIDs:
  - ubuntu-2204 # containerd 1.4.x is not supported on ubuntu 22.04
- name: k8s123x_124x_upgrade_cis_benchmarks_checks
  installerSpec:
    kubernetes:
      version: "1.23.x"
    containerd:
      version: "latest"
    flannel:
      version: latest
    ekco:
      version: "latest"
  upgradeSpec:
    kubernetes:
      version: "1.24.x"
      cisCompliance: true
    containerd:
      version: "latest"
    flannel:
      version: latest
    ekco:
      version: "latest"
  postUpgradeScript: |
    echo "running  CIS Kubernetes Benchmark Checks"
    kube_bench_version="$(curl -s https://api.github.com/repos/aquasecurity/kube-bench/releases/latest | grep '"tag_name":' | sed -E 's/.*"v([^"]+)".*/\1/')"
    curl -L https://github.com/aquasecurity/kube-bench/releases/download/v${kube_bench_version}/kube-bench_${kube_bench_version}_linux_amd64.tar.gz | tar -xz
    ./kube-bench --config-dir=`pwd`/cfg --config=`pwd`/cfg/config.yaml --exit-code=1
- name: "Upgrade to 1.26 minimal airgap"
  installerSpec:
    kubernetes:
      version: 1.25.x
    flannel:
      version: latest
    openebs:
      version: latest
      isLocalPVEnabled: true
      localPVStorageClassName: default
    minio:
      version: latest
    registry:
      version: latest
    kotsadm:
      version: latest
    containerd:
      version: latest
    ekco:
      version: latest
  upgradeSpec:
    kubernetes:
      version: 1.26.x
    flannel:
      version: latest
    openebs:
      version: latest
      isLocalPVEnabled: true
      localPVStorageClassName: default
    minio:
      version: latest
    registry:
      version: latest
    kotsadm:
      version: latest
    containerd:
      version: latest
    ekco:
      version: latest
  airgap: true
- name: "Upgrade to 1.26 minimal"
  installerSpec:
    kubernetes:
      version: 1.25.x
    flannel:
      version: latest
    openebs:
      version: latest
      isLocalPVEnabled: true
      localPVStorageClassName: default
    minio:
      version: latest
    registry:
      version: latest
    kotsadm:
      version: latest
    containerd:
      version: latest
    ekco:
      version: latest
  upgradeSpec:
    kubernetes:
      version: 1.26.x
    flannel:
      version: latest
    openebs:
      version: latest
      isLocalPVEnabled: true
      localPVStorageClassName: default
    registry:
      version: latest
    kotsadm:
      version: latest
    containerd:
      version: latest
    ekco:
      version: latest
- name: "Upgrade to 1.26 airgap"
  cpu: 6
  installerSpec:
    kubernetes:
      version: 1.25.x
    flannel:
      version: latest
    openebs:
      version: latest
      isLocalPVEnabled: true
      localPVStorageClassName: default
    minio:
      version: latest
    registry:
      version: latest
    kotsadm:
      version: latest
    containerd:
      version: latest
    velero:
      version: 1.8.x
    ekco:
      version: latest
  upgradeSpec:
    kubernetes:
      version: 1.26.x
    flannel:
      version: latest
    openebs:
      version: latest
      isLocalPVEnabled: true
      localPVStorageClassName: default
    minio:
      version: latest
    registry:
      version: latest
    kotsadm:
      version: latest
    containerd:
      version: latest
    velero:
      version: 1.9.x
    ekco:
      version: latest
  airgap: true
- name: "Upgrade to 1.24, weave to flannel"
  cpu: 7
  installerSpec:
    kubernetes:
      version: 1.23.x
    weave:
      version: latest
    rook:
      version: 1.9.x
    registry:
      version: latest
    kotsadm:
      version: latest
    docker:
      version: 20.10.x
    velero:
      version: 1.8.x
    ekco:
      version: latest
  upgradeSpec:
    kubernetes:
      version: 1.24.x
    flannel:
      version: latest
    longhorn:
      version: latest
    registry:
      version: latest
    kotsadm:
      version: latest
      disableS3: true
    containerd:
      version: latest
    velero:
      version: 1.9.x
    ekco:
      version: latest
  unsupportedOSIDs:
  - centos-74 # Rook 1.8+ not supported on 3.10.0-693.el7.x86_64 kernel
- name: "Migrate from Docker to Containerd and Kubernetes from 1.23 to 1.25 airgap"
  installerSpec:
    kubernetes:
      version: 1.23.x
    weave: # flannel has errors with dns and docker
      version: latest
    openebs:
      version: latest
      isLocalPVEnabled: true
      localPVStorageClassName: default
    minio:
      version: latest
    ekco:
      version: latest
    registry:
      version: latest
    kotsadm:
      version: latest
    docker:
      version: latest
  upgradeSpec:
    kubernetes:
      version: 1.25.x
    weave: # flannel has errors with dns and docker
      version: latest
    openebs:
      version: latest
      isLocalPVEnabled: true
      localPVStorageClassName: default
    minio:
      version: latest
    ekco:
      version: latest
    registry:
      version: latest
    kotsadm:
      version: latest
    containerd:
      version: latest
  airgap: true
  postInstallScript: |
    source /opt/kurl-testgrid/testhelpers.sh
    minio_object_store_info
    validate_read_write_object_store rwtest testfile.txt
    echo "Checking kubectl with kube/config"
    echo "Kubeconfig was $KUBECONFIG"
    unset KUBECONFIG
    kubectl get namespaces
  postUpgradeScript: |
    source /opt/kurl-testgrid/testhelpers.sh
    minio_object_store_info
    validate_testfile rwtest testfile.txt
    validate_read_write_object_store postupgrade upgradefile.txt
- name: "Migrate from Docker to Containerd and Kubernetes from 1.23 to 1.25"
  installerSpec:
    kubernetes:
      version: 1.23.x
    weave: # flannel has errors with dns and docker
      version: latest
    openebs:
      version: latest
      isLocalPVEnabled: true
      localPVStorageClassName: default
    minio:
      version: latest
    ekco:
      version: latest
    registry:
      version: latest
    kotsadm:
      version: latest
    docker:
      version: latest
  upgradeSpec:
    kubernetes:
      version: 1.25.x
    weave: # flannel has errors with dns and docker
      version: latest
    openebs:
      version: latest
      isLocalPVEnabled: true
      localPVStorageClassName: default
    minio:
      version: latest
    ekco:
      version: latest
    registry:
      version: latest
    kotsadm:
      version: latest
    containerd:
      version: latest
  postInstallScript: |
    source /opt/kurl-testgrid/testhelpers.sh
    minio_object_store_info
    validate_read_write_object_store rwtest testfile.txt
    echo "Checking kubectl with kube/config"
    echo "Kubeconfig was $KUBECONFIG"
    unset KUBECONFIG
    kubectl get namespaces
  postUpgradeScript: |
    source /opt/kurl-testgrid/testhelpers.sh
    minio_object_store_info
    validate_testfile rwtest testfile.txt
    validate_read_write_object_store postupgrade upgradefile.txt
- name: remove_all_object_storage
  cpu: 7
  installerSpec:
    kubernetes:
      version: 1.23.x
    flannel:
      version: latest
    rook:
      version: 1.9.x
    registry:
      version: latest
    kotsadm:
      version: latest
    containerd:
      version: latest
    velero:
      version: 1.8.x
    ekco:
      version: latest
  upgradeSpec:
    kubernetes:
      version: 1.24.x
    flannel:
      version: latest
    longhorn:
      version: latest
    registry:
      version: latest
    kotsadm:
      version: latest
      disableS3: true
    containerd:
      version: latest
    velero:
      version: 1.9.x
    ekco:
      version: latest
  unsupportedOSIDs:
  - centos-74 # Rook 1.8+ not supported on 3.10.0-693.el7.x86_64 kernel
- name: k8s1205_rook_to_longhorn
  cpu: 6
  installerSpec:
    kubernetes:
      version: 1.20.x
    weave:
      version: 2.8.1
    rook:
      isBlockStorageEnabled: true
      version: 1.4.3
    kotsadm:
      version: 1.38.0
    containerd:
      version: 1.4.6
    ekco:
      version: latest
  upgradeSpec:
    kubernetes:
      version: 1.20.x
    weave:
      version: 2.8.1
    longhorn:
      version: 1.1.2
    minio:
      version: latest
    kotsadm:
      version: 1.38.0
    containerd:
      version: 1.4.6
    ekco:
      version: latest
  unsupportedOSIDs:
  - ubuntu-2204 # containerd 1.4.x is not supported on ubuntu 22.04
- name: k8s19x_rook_upgrade_143_18x_docker
  flags: "yes"
  cpu: 6
  installerSpec:
    kubernetes:
      version: 1.19.x
    weave:
      version: 2.8.1
    rook:
      isBlockStorageEnabled: true
      version: 1.4.3
    docker:
      version: 20.10.17
    ekco:
      version: latest
  upgradeSpec:
    kubernetes:
      version: 1.21.x
    weave:
      version: 2.8.1
    rook:
      bypassUpgradeWarning: true
      version: 1.8.x
    docker:
      version: 20.10.17
    ekco:
      version: latest
  unsupportedOSIDs:
    - centos-74 # Rook 1.8+ not supported on 3.10.0-693.el7.x86_64 kernel
- name: k8s24x_rook_upgrade_17x_110x
  flags: "yes"
  cpu: 6
  installerSpec:
    kubernetes:
      version: 1.24.x
    weave:
      version: 2.8.1
    rook:
      isBlockStorageEnabled: true
      version: 1.7.x
    kotsadm:
      version: 1.93.x
    containerd:
      version: 1.6.x
    ekco:
      version: latest
  upgradeSpec:
    kubernetes:
      version: 1.26.x
    weave:
      version: 2.8.1
    rook:
      bypassUpgradeWarning: true
      version: 1.10.x
    kotsadm:
      version: 1.93.x
    containerd:
      version: 1.6.x
    ekco:
      version: latest
  unsupportedOSIDs:
    - centos-74 # Rook 1.8+ not supported on 3.10.0-693.el7.x86_64 kernel
- name: k8s119_helm
  installerSpec:
    kubernetes:
      version: latest
    weave:
      version: latest
    containerd:
      version: 1.4.6
    helm:
      helmfileSpec: |-
        repositories:
        - name: nginx-stable
          url: https://helm.nginx.com/stable
        releases:
        - name: nginx-ingress
          chart: nginx-stable/nginx-ingress
          version: ~0.8.0
          values:
          - controller:
              image:
                tag: 1.9.1
              service:
                type: NodePort
                httpPort:
                  nodePort: 30080
                httpsPort:
                  nodePort: 30443
  upgradeSpec:
    kubernetes:
      version: latest
    weave:
      version: latest
    containerd:
      version: 1.5.11
    helm:
      helmfileSpec: |-
        repositories:
        - name: nginx-stable
          url: https://helm.nginx.com/stable
        releases:
        - name: nginx-ingress
          chart: nginx-stable/nginx-ingress
          version: ~0.8.0
          values:
          - controller:
              image:
                tag: 1.10.0
              service:
                type: NodePort
                httpPort:
                  nodePort: 30080
                httpsPort:
                  nodePort: 30443
  unsupportedOSIDs:
  - ubuntu-2204 # containerd 1.4.x is not supported on ubuntu 22.04
- name: k8s1184_1202_containerd
  installerSpec:
    kubernetes:
      version: 1.18.4
    weave:
      version: 2.6.5
    contour:
      version: 1.0.1
    containerd:
      version: 1.4.6
  upgradeSpec:
    kubernetes:
      version: 1.20.2
    weave:
      version: 2.6.5
    contour:
      version: latest
    containerd:
      version: 1.6.x
  unsupportedOSIDs:
  - ubuntu-2204 # containerd 1.4.x is not supported on ubuntu 22.04
- name: k8s1184_1202
  installerSpec:
    kubernetes:
      version: 1.18.4
    docker:
      version: 20.10.5
    weave:
      version: 2.6.5
    contour:
      version: 1.0.1
  upgradeSpec:
    kubernetes:
      version: 1.20.2
    docker:
      version: 20.10.5
    weave:
      version: 2.8.1
    contour:
      version: latest
  unsupportedOSIDs:
  - ubuntu-2204 # docker 20.10.5 is not available on ubuntu 22.04
# from this point on we have tests that validate we can migrate between different storage
# provisioners.
- name: Migrate from Rook 1.0.4 to OpenEBS + Minio 
  flags: "yes"
  installerSpec:
    kubernetes:
      version: 1.19.x
    containerd:
      version: 1.6.x
    flannel:
      version: 0.21.x
    registry:
      version: 2.8.x
    kotsadm: 
      version: latest
    ekco:
      version: latest
    rook:
      version: 1.0.4
  upgradeSpec:
    kubernetes:
      version: 1.19.x
    containerd:
      version: 1.6.x
    flannel:
      version: 0.21.x
    registry:
      version: 2.8.x
    kotsadm: 
      version: latest
    ekco:
      version: latest
    openebs: 
      version: 3.4.x
      isLocalPVEnabled: true
      localPVStorageClassName: local
    minio: 
      version: latest
  postInstallScript: |
    source /opt/kurl-testgrid/testhelpers.sh
    create_deployment_with_mounted_volume "migration-test" "default" "/data"
    create_random_file_and_upload_to_deployment "migration-test" "default" "./test.data" "/data/test.data"
    test_push_image_to_registry
  postUpgradeScript: |
    source /opt/kurl-testgrid/testhelpers.sh
    sleep 120
    download_file_from_deployment_and_compare "migration-test" "default" "./test.data" "/data/test.data"
    pvc_uses_provisioner "migration-test" "default" "rook"
    test_pull_image_from_registry
- name: Migrate from Rook 1.4.x to OpenEBS + Minio 
  flags: "yes"
  installerSpec:
    kubernetes:
      version: 1.21.x
    containerd:
      version: 1.6.x
    flannel:
      version: 0.21.x
    registry:
      version: 2.8.x
    kotsadm: 
      version: latest
    ekco:
      version: latest
    rook:
      version: 1.4.x
  upgradeSpec:
    kubernetes:
      version: 1.21.x
    containerd:
      version: 1.6.x
    flannel:
      version: 0.21.x
    registry:
      version: 2.8.x
    kotsadm: 
      version: latest
    ekco:
      version: latest
    openebs: 
      version: 3.4.x
      isLocalPVEnabled: true
      localPVStorageClassName: local
    minio: 
      version: latest
  postInstallScript: |
    source /opt/kurl-testgrid/testhelpers.sh
    create_deployment_with_mounted_volume "migration-test" "default" "/data"
    create_random_file_and_upload_to_deployment "migration-test" "default" "./test.data" "/data/test.data"
    test_push_image_to_registry
  postUpgradeScript: |
    source /opt/kurl-testgrid/testhelpers.sh
    sleep 120
    download_file_from_deployment_and_compare "migration-test" "default" "./test.data" "/data/test.data"
    pvc_uses_provisioner "migration-test" "default" "rook"
    test_pull_image_from_registry
- name: Migrate from Longhorn (S3 disabled) to OpenEBS + Minio
  flags: "yes"
  installerSpec:
    kubernetes:
      version: 1.24.x
    containerd:
      version: 1.6.x
    flannel:
      version: 0.21.x
    registry:
      version: 2.8.x
    kotsadm: 
      version: latest
      disableS3: true
    ekco:
      version: latest
    longhorn:
      version: 1.3.x
  upgradeSpec:
    kubernetes:
      version: 1.24.x
    containerd:
      version: 1.6.x
    flannel:
      version: 0.21.x
    registry:
      version: 2.8.x
    kotsadm: 
      version: latest
    ekco:
      version: latest
    openebs: 
      version: 3.4.x
      isLocalPVEnabled: true
      localPVStorageClassName: local
    minio: 
      version: latest
  postInstallScript: |
    source /opt/kurl-testgrid/testhelpers.sh
    create_deployment_with_mounted_volume "migration-test" "default" "/data"
    create_random_file_and_upload_to_deployment "migration-test" "default" "./test.data" "/data/test.data"
    test_push_image_to_registry
  postUpgradeScript: |
    source /opt/kurl-testgrid/testhelpers.sh
    sleep 120
    download_file_from_deployment_and_compare "migration-test" "default" "./test.data" "/data/test.data"
    pvc_uses_provisioner "migration-test" "default" "rook"
    test_pull_image_from_registry
- name: Migrate from Longhorn + Minio to OpenEBS + Minio
  flags: "yes"
  installerSpec:
    kubernetes:
      version: 1.24.x
    containerd:
      version: 1.6.x
    flannel:
      version: 0.21.x
    registry:
      version: 2.8.x
    kotsadm: 
      version: latest
    ekco:
      version: latest
    longhorn:
      version: 1.3.x
    minio: 
      version: latest
  upgradeSpec:
    kubernetes:
      version: 1.24.x
    containerd:
      version: 1.6.x
    flannel:
      version: 0.21.x
    registry:
      version: 2.8.x
    kotsadm: 
      version: latest
    ekco:
      version: latest
    openebs: 
      version: 3.4.x
      isLocalPVEnabled: true
      localPVStorageClassName: local
    minio: 
      version: latest
  postInstallScript: |
    source /opt/kurl-testgrid/testhelpers.sh
    create_deployment_with_mounted_volume "migration-test" "default" "/data"
    create_random_file_and_upload_to_deployment "migration-test" "default" "./test.data" "/data/test.data"
    test_push_image_to_registry
  postUpgradeScript: |
    source /opt/kurl-testgrid/testhelpers.sh
    sleep 120
    download_file_from_deployment_and_compare "migration-test" "default" "./test.data" "/data/test.data"
    pvc_uses_provisioner "migration-test" "default" "rook"
    test_pull_image_from_registry
- name: Migrate from Rook 1.0.4 to OpenEBS (S3 disabled)
  flags: "yes"
  installerSpec:
    kubernetes:
      version: 1.19.x
    containerd:
      version: 1.6.x
    flannel:
      version: 0.21.x
    registry:
      version: 2.8.x
    kotsadm: 
      version: latest
    ekco:
      version: latest
    rook:
      version: 1.0.4
  upgradeSpec:
    kubernetes:
      version: 1.19.x
    containerd:
      version: 1.6.x
    flannel:
      version: 0.21.x
    registry:
      version: 2.8.x
    kotsadm: 
      version: latest
      disableS3: true
    ekco:
      version: latest
    openebs: 
      version: 3.4.x
      isLocalPVEnabled: true
      localPVStorageClassName: local
  postInstallScript: |
    source /opt/kurl-testgrid/testhelpers.sh
    create_deployment_with_mounted_volume "migration-test" "default" "/data"
    create_random_file_and_upload_to_deployment "migration-test" "default" "./test.data" "/data/test.data"
    test_push_image_to_registry
  postUpgradeScript: |
    source /opt/kurl-testgrid/testhelpers.sh
    sleep 120
    download_file_from_deployment_and_compare "migration-test" "default" "./test.data" "/data/test.data"
    pvc_uses_provisioner "migration-test" "default" "rook"
    test_pull_image_from_registry
- name: Migrate from Rook 1.4.x to OpenEBS (S3 disabled)
  flags: "yes"
  installerSpec:
    kubernetes:
      version: 1.21.x
    containerd:
      version: 1.6.x
    flannel:
      version: 0.21.x
    registry:
      version: 2.8.x
    kotsadm: 
      version: latest
    ekco:
      version: latest
    rook:
      version: 1.4.x
  upgradeSpec:
    kubernetes:
      version: 1.21.x
    containerd:
      version: 1.6.x
    flannel:
      version: 0.21.x
    registry:
      version: 2.8.x
    kotsadm: 
      version: latest
      disableS3: true
    ekco:
      version: latest
    openebs: 
      version: 3.4.x
      isLocalPVEnabled: true
      localPVStorageClassName: local
  postInstallScript: |
    source /opt/kurl-testgrid/testhelpers.sh
    create_deployment_with_mounted_volume "migration-test" "default" "/data"
    create_random_file_and_upload_to_deployment "migration-test" "default" "./test.data" "/data/test.data"
    test_push_image_to_registry
  postUpgradeScript: |
    source /opt/kurl-testgrid/testhelpers.sh
    sleep 120
    download_file_from_deployment_and_compare "migration-test" "default" "./test.data" "/data/test.data"
    pvc_uses_provisioner "migration-test" "default" "rook"
    test_pull_image_from_registry
- name: Migrate from Longhorn (S3 disabled) to OpenEBS (S3 disabled)
  flags: "yes"
  installerSpec:
    kubernetes:
      version: 1.24.x
    containerd:
      version: 1.6.x
    flannel:
      version: 0.21.x
    registry:
      version: 2.8.x
    kotsadm: 
      version: latest
      disableS3: true
    ekco:
      version: latest
    longhorn:
      version: 1.3.x
  upgradeSpec:
    kubernetes:
      version: 1.24.x
    containerd:
      version: 1.6.x
    flannel:
      version: 0.21.x
    registry:
      version: 2.8.x
    kotsadm: 
      version: latest
      disableS3: true
    ekco:
      version: latest
    openebs: 
      version: 3.4.x
      isLocalPVEnabled: true
      localPVStorageClassName: local
  postInstallScript: |
    source /opt/kurl-testgrid/testhelpers.sh
    create_deployment_with_mounted_volume "migration-test" "default" "/data"
    create_random_file_and_upload_to_deployment "migration-test" "default" "./test.data" "/data/test.data"
    test_push_image_to_registry
  postUpgradeScript: |
    source /opt/kurl-testgrid/testhelpers.sh
    sleep 120
    download_file_from_deployment_and_compare "migration-test" "default" "./test.data" "/data/test.data"
    pvc_uses_provisioner "migration-test" "default" "rook"
    test_pull_image_from_registry
- name: Migrate from Longhorn + Minio to OpenEBS (S3 disabled)
  flags: "yes"
  installerSpec:
    kubernetes:
      version: 1.24.x
    containerd:
      version: 1.6.x
    flannel:
      version: 0.21.x
    registry:
      version: 2.8.x
    kotsadm: 
      version: latest
    ekco:
      version: latest
    longhorn:
      version: 1.3.x
    minio: 
      version: latest
  upgradeSpec:
    kubernetes:
      version: 1.24.x
    containerd:
      version: 1.6.x
    flannel:
      version: 0.21.x
    registry:
      version: 2.8.x
    kotsadm: 
      version: latest
      disableS3: true
    ekco:
      version: latest
    openebs: 
      version: 3.4.x
      isLocalPVEnabled: true
      localPVStorageClassName: local
  postInstallScript: |
    source /opt/kurl-testgrid/testhelpers.sh
    create_deployment_with_mounted_volume "migration-test" "default" "/data"
    create_random_file_and_upload_to_deployment "migration-test" "default" "./test.data" "/data/test.data"
    test_push_image_to_registry
  postUpgradeScript: |
    source /opt/kurl-testgrid/testhelpers.sh
    sleep 120
    download_file_from_deployment_and_compare "migration-test" "default" "./test.data" "/data/test.data"
    pvc_uses_provisioner "migration-test" "default" "rook"
    test_pull_image_from_registry
- name: Migrate from OpenEBS + Minio to OpenEBS (S3 disabled)
  flags: "yes"
  installerSpec:
    kubernetes:
      version: 1.26.x
    containerd:
      version: 1.6.x
    flannel:
      version: 0.21.x
    registry:
      version: 2.8.x
    kotsadm: 
      version: latest
    ekco:
      version: latest
    openebs: 
      version: 3.4.x
      isLocalPVEnabled: true
      localPVStorageClassName: local
    minio: 
      version: latest
  upgradeSpec:
    kubernetes:
      version: 1.26.x
    containerd:
      version: 1.6.x
    flannel:
      version: 0.21.x
    registry:
      version: 2.8.x
    kotsadm: 
      version: latest
      disableS3: true
    ekco:
      version: latest
    openebs: 
      version: 3.4.x
      isLocalPVEnabled: true
      localPVStorageClassName: local
  postInstallScript: |
    source /opt/kurl-testgrid/testhelpers.sh
    create_deployment_with_mounted_volume "migration-test" "default" "/data"
    create_random_file_and_upload_to_deployment "migration-test" "default" "./test.data" "/data/test.data"
    test_push_image_to_registry
  postUpgradeScript: |
    source /opt/kurl-testgrid/testhelpers.sh
    sleep 120
    download_file_from_deployment_and_compare "migration-test" "default" "./test.data" "/data/test.data"
    pvc_uses_provisioner "migration-test" "default" "rook"
    test_pull_image_from_registry
- name: Migrate from Rook 1.0.4 to Rook 1.4+
  flags: "yes"
  cpu: 6
  numPrimaryNodes: 1
  numSecondaryNodes: 2
  installerSpec:
    kubernetes:
      version: 1.19.x
    containerd:
      version: 1.6.x
    flannel:
      version: 0.21.x
    registry:
      version: 2.8.x
    kotsadm: 
      version: latest
    ekco:
      version: latest
    rook:
      version: 1.0.4
  upgradeSpec:
    kubernetes:
      version: 1.19.x
    containerd:
      version: 1.6.x
    flannel:
      version: 0.21.x
    registry:
      version: 2.8.x
    kotsadm: 
      version: latest
    ekco:
      version: latest
    rook:
      version: 1.4.x
  postInstallScript: |
    source /opt/kurl-testgrid/testhelpers.sh
    create_deployment_with_mounted_volume "migration-test" "default" "/data"
    create_random_file_and_upload_to_deployment "migration-test" "default" "./test.data" "/data/test.data"
    test_push_image_to_registry
  postUpgradeScript: |
    source /opt/kurl-testgrid/testhelpers.sh
    sleep 120
    download_file_from_deployment_and_compare "migration-test" "default" "./test.data" "/data/test.data"
    pvc_uses_provisioner "migration-test" "default" "rook"
    test_pull_image_from_registry
- name: Migrate from Longhorn + Minio to Rook 1.4+
  flags: "yes"
  cpu: 6
  numPrimaryNodes: 1
  numSecondaryNodes: 2
  installerSpec:
    kubernetes:
      version: 1.21.x
    containerd:
      version: 1.6.x
    flannel:
      version: 0.21.x
    registry:
      version: 2.8.x
    kotsadm: 
      version: latest
    ekco:
      version: latest
    longhorn:
      version: 1.3.x
    minio:
      version: latest
  upgradeSpec:
    kubernetes:
      version: 1.21.x
    containerd:
      version: 1.6.x
    flannel:
      version: 0.21.x
    registry:
      version: 2.8.x
    kotsadm: 
      version: latest
    ekco:
      version: latest
    rook:
      version: 1.4.x
  postInstallScript: |
    source /opt/kurl-testgrid/testhelpers.sh
    create_deployment_with_mounted_volume "migration-test" "default" "/data"
    create_random_file_and_upload_to_deployment "migration-test" "default" "./test.data" "/data/test.data"
    test_push_image_to_registry
  postUpgradeScript: |
    source /opt/kurl-testgrid/testhelpers.sh
    sleep 120
    download_file_from_deployment_and_compare "migration-test" "default" "./test.data" "/data/test.data"
    pvc_uses_provisioner "migration-test" "default" "rook"
    test_pull_image_from_registry
- name: Migrate from Rook 1.0.4 to OpenEBS + Minio
  flags: "yes"
  cpu: 6
  numPrimaryNodes: 1
  numSecondaryNodes: 2
  installerSpec:
    kubernetes:
      version: 1.19.x
    containerd:
      version: 1.6.x
    flannel:
      version: 0.21.x
    registry:
      version: 2.8.x
    kotsadm: 
      version: latest
    ekco:
      version: latest
    rook:
      version: 1.0.4
  upgradeSpec:
    kubernetes:
      version: 1.19.x
    containerd:
      version: 1.6.x
    flannel:
      version: 0.21.x
    registry:
      version: 2.8.x
    kotsadm: 
      version: latest
    ekco:
      version: latest
    openebs: 
      version: 3.4.x
      isLocalPVEnabled: true
      localPVStorageClassName: local
    minio: 
      version: latest
  postInstallScript: |
    source /opt/kurl-testgrid/testhelpers.sh
    create_deployment_with_mounted_volume "migration-test" "default" "/data"
    create_random_file_and_upload_to_deployment "migration-test" "default" "./test.data" "/data/test.data"
    test_push_image_to_registry
  postUpgradeScript: |
    source /opt/kurl-testgrid/testhelpers.sh
    sleep 120
    download_file_from_deployment_and_compare "migration-test" "default" "./test.data" "/data/test.data"
    pvc_uses_provisioner "migration-test" "default" "rook"
    test_pull_image_from_registry
- name: Migrate from Rook 1.4.x to OpenEBS + Minio
  flags: "yes"
  cpu: 6
  numPrimaryNodes: 1
  numSecondaryNodes: 2
  installerSpec:
    kubernetes:
      version: 1.21.x
    containerd:
      version: 1.6.x
    flannel:
      version: 0.21.x
    registry:
      version: 2.8.x
    kotsadm: 
      version: latest
    ekco:
      version: latest
    rook:
      version: 1.4.x
  upgradeSpec:
    kubernetes:
      version: 1.21.x
    containerd:
      version: 1.6.x
    flannel:
      version: 0.21.x
    registry:
      version: 2.8.x
    kotsadm: 
      version: latest
    ekco:
      version: latest
    openebs: 
      version: 3.4.x
      isLocalPVEnabled: true
      localPVStorageClassName: local
    minio: 
      version: latest
  postInstallScript: |
    source /opt/kurl-testgrid/testhelpers.sh
    create_deployment_with_mounted_volume "migration-test" "default" "/data"
    create_random_file_and_upload_to_deployment "migration-test" "default" "./test.data" "/data/test.data"
    test_push_image_to_registry
  postUpgradeScript: |
    source /opt/kurl-testgrid/testhelpers.sh
    sleep 120
    download_file_from_deployment_and_compare "migration-test" "default" "./test.data" "/data/test.data"
    pvc_uses_provisioner "migration-test" "default" "rook"
    test_pull_image_from_registry
- name: Migrate from Longhorn + Minio to OpenEBS + Minio
  flags: "yes"
  cpu: 6
  numPrimaryNodes: 1
  numSecondaryNodes: 2
  installerSpec:
    kubernetes:
      version: 1.19.x
    containerd:
      version: 1.6.x
    flannel:
      version: 0.21.x
    registry:
      version: 2.8.x
    kotsadm: 
      version: latest
    ekco:
      version: latest
    longhorn:
      version: 1.3.x
    minio: 
      version: latest
  upgradeSpec:
    kubernetes:
      version: 1.19.x
    containerd:
      version: 1.6.x
    flannel:
      version: 0.21.x
    registry:
      version: 2.8.x
    kotsadm: 
      version: latest
    ekco:
      version: latest
    openebs: 
      version: 3.4.x
      isLocalPVEnabled: true
      localPVStorageClassName: local
    minio: 
      version: latest
  postInstallScript: |
    source /opt/kurl-testgrid/testhelpers.sh
    create_deployment_with_mounted_volume "migration-test" "default" "/data"
    create_random_file_and_upload_to_deployment "migration-test" "default" "./test.data" "/data/test.data"
    test_push_image_to_registry
  postUpgradeScript: |
    source /opt/kurl-testgrid/testhelpers.sh
    sleep 120
    download_file_from_deployment_and_compare "migration-test" "default" "./test.data" "/data/test.data"
    pvc_uses_provisioner "migration-test" "default" "rook"
    test_pull_image_from_registry
- name: Migrate from Rook 1.10.x to OpenEBS 3.4.0 with localpv migrate
  flags: "yes"
  installerSpec:
    kubernetes:
      version: "1.24.x"
    flannel:
      version: latest
    containerd:
      version: "latest"
    rook:
      version: "1.10.x"
    kotsadm:
      version: "latest"
  upgradeSpec:
    kubernetes:
      version: "1.26.x"
    flannel:
      version: latest
    containerd:
      version: "latest"
    openebs:
      isLocalPVEnabled: true
      localPVStorageClassName: openebs
      namespace: openebs
      "version": "3.4.0"
    minio:
      version: "latest"
    kotsadm:
      version: "latest"
  unsupportedOSIDs:
    - centos-74 # Rook 1.8+ not supported on 3.10.0-693.el7.x86_64 kernel
  postInstallScript: |
    source /opt/kurl-testgrid/testhelpers.sh
    rook_ceph_object_store_info
    validate_read_write_object_store rwtest testfile.txt
  postUpgradeScript: |
    source /opt/kurl-testgrid/testhelpers.sh
    minio_object_store_info
    validate_testfile rwtest testfile.txt
    validate_read_write_object_store postupgrade upgradefile.txt    
    echo "Verify if rook-ceph namespace was removed after upgrade"
    if kubectl get namespace/rook-ceph ; then
       echo "Namespace rook-ceph was not removed"
       exit 1 
    else
       echo "Namespace rook-ceph was removed"
    fi
